package com.onk.grp2.Environment.main;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.Timer;

import onk.grp2.Environment.autoGenerated.Environment;

public enum EnvironmentMeasurereImpl implements EnvironmentMeasurere,
		ActionListener {

	INSTANCE;

	private ArrayList<EnvironmentEvent> EnvironmentEventListeners = new ArrayList<>();
	private Environment status = new Environment();

	@Override
	public void run() {

		status.windSpeed = (float) 9;
		status.windDirection = (float) 90;

		
		int delay = 1000; // milliseconds
		ActionListener taskPerformer = this;

		new Timer(delay, taskPerformer).start();

	}

	@Override
	public void addEnvironmentEventListener(EnvironmentEvent event) {
		if (event != null) {
			this.EnvironmentEventListeners.add(event);
		}

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		status.windSpeed += 9;
		status.windDirection += 90 % 360;
		
		for (EnvironmentEvent EnvironmentEvent : EnvironmentEventListeners) {
			EnvironmentEvent.SendEvent(status);
		}

	}

}
